trigger: 
- main
- develop

pool:
  vmImage: 'windows-latest'

stages:
- stage: Build
  displayName: 'Build application'
  jobs:
  - job: Build
    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '8.0.x'
        includePreviewVersions: true
        installationPath: $(Agent.ToolsDirectory)/dotnet

    - script: |
        dotnet build $(Build.SourcesDirectory)\BlazorHelloWorld.csproj -c Release
      displayName: 'Build Blazor app'
    # 경로수정
    - script: |
        dotnet publish $(Build.SourcesDirectory)\BlazorHelloWorld.csproj -c Release -o $(Build.ArtifactStagingDirectory)
      displayName: 'Publish Blazor app'

- stage: DeployToDev
  displayName: 'Deploy to Dev Environment'
  jobs:
  - deployment: DeployToDev
    environment: 'Dev' # Dev 환경 이름
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            inputs:
              azureSubscription: 'Azure subscription 1'
              appType: 'webAppWindows'
              appName: 'AzureDevOpsShuaDev' # Dev Web App 이름
              runtimeStack: 'DOTNET|8.0'
              package: $(Pipeline.Workspace)/path/to/artifact

- stage: DeployToLive
  displayName: 'Deploy to Live Environment'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  jobs:
  - deployment: DeployToLive
    environment: 'Live' # Live 환경 이름, 승인 과정 설정 필요
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            inputs:
              azureSubscription: 'Azure subscription 1'
              appType: 'webAppWindows'
              appName: 'AzureDevOpsShua' # Live Web App 이름
              runtimeStack: 'DOTNET|8.0'
              package: $(Pipeline.Workspace)/path/to/artifact
